class TestClass {}
class TestClass: Superclass {}
class TestClass: Superclass, Conform1, Conform2 {}
class TestClass<T> {}
class TestClass<T, U> {}
class TestClass<repeat each T> {}
class TestClass<T> where T: Equatable {}
class TestClass<T>: Superclass where T: Equatable {}

class
MoreThanOneLine
{}

final class
MoreThanOneLineGeneric<T>
where
T: Param
{}

struct TestStruct {}
struct TestStruct<T, U> {}

enum TestEnum {}
enum TestEnum<T, U> {}

actor TestActor {}
actor TestActor<T, U> {}

extension TestExtension {}
extension TestExtension<T, U> {}

protocol TestProtocol {}
protocol TestProtocol<T, U> {}
